buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net' }
        maven {
            url "https://repo.spongepowered.org/repository/maven-public/"
            // content { includeGroup "org.spongepowered" }
        }
        mavenCentral()
        maven {url = "https://maven.kyrptonaught.dev"}
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: "org.spongepowered.mixin"

version = '0.1'
group = 'com.ncpbails.fundamentallyfixed' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'fundamentallyfixed'

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    // The mappings can be changed at any time and must be in the following format.
    // Channel:   Version:
    // official   MCVersion             Official field/method names from Mojang mapping files
    // parchment  YYYY.MM.DD-MCVersion  Open community-sourced parameter names and javadocs layered on top of official
    //
    // You must be aware of the Mojang license when using the 'official' or 'parchment' mappings.
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    //
    // Parchment is an unofficial project maintained by ParchmentMC, separate from MinecraftForge
    // Additional setup is needed to use their mappings: https://github.com/ParchmentMC/Parchment/wiki/Getting-Started
    //
    // Use non-default mappings at your own risk. They may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'official', version: '1.19.2'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', 'fundamentallyfixed'

            mods {
                fundamentallyfixed {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'fundamentallyfixed'

            mods {
                fundamentallyfixed {
                    source sourceSets.main
                }
            }
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'fundamentallyfixed'

            mods {
                fundamentallyfixed {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'fundamentallyfixed', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                fundamentallyfixed {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        url = "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url = "https://maven.jaackson.me"
    }
    repositories {
        maven {
            name = 'tterrag maven'
            url = 'https://maven.tterrag.com/'
        }
    }
}

dependencies {
    // Specify the version of Minecraft to use. If this is any group other than 'net.minecraft', it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency, and its patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.19.2-43.2.0'

    // Real mod deobf dependency examples - these get remapped to your current mappings
    // compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api") // Adds JEI API as a compile dependency
    // runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}") // Adds the full JEI mod as a runtime dependency
    // implementation fg.deobf("com.tterrag.registrate:Registrate:MC${mc_version}-${registrate_version}") // Adds registrate as a dependency

    //Required Mod Dependencies
    implementation fg.deobf("curse.maven:jei-238222:4494410")
    implementation fg.deobf("curse.maven:blueprint-382216:4442628")
    compileOnly fg.deobf("com.jozufozu.flywheel:flywheel-forge-1.19.2:0.6.8.a-14")
    compileOnly fg.deobf("com.tterrag.registrate:Registrate:MC1.19-1.1.5")
    implementation fg.deobf("curse.maven:morecreativetabs-581838:4119849")
    implementation fg.deobf("curse.maven:crafttweaker-239197:4462134")
    implementation fg.deobf("curse.maven:createtweaker-437717:4444178")
    implementation fg.deobf("curse.maven:jeitweaker-368718:4448263")
    implementation fg.deobf("curse.maven:globalpacks-317134:3950165")
    //implementation fg.deobf("curse.maven:gamestages-268655:4396244")

    //Required Compat Libraries
    implementation fg.deobf("curse.maven:autoreglib-250363:4100299")
    implementation fg.deobf("curse.maven:moonlightlib-499980:4491267")
    implementation fg.deobf("curse.maven:cloth-348521:3972423")
    implementation fg.deobf("curse.maven:playeranimator-658587:4418149")
    implementation fg.deobf("curse.maven:geckolib-388172:4407241")
    //implementation fg.deobf("curse.maven:bookshelf-228525:4426591")

    //Required Compat
    implementation fg.deobf("curse.maven:modestmining-533775:4528148")
    implementation fg.deobf("curse.maven:create-328085:4371809")
    implementation fg.deobf("curse.maven:shieldexpansion-583318:4461135")
    implementation fg.deobf("curse.maven:quark-243121:4523458")
    implementation fg.deobf("curse.maven:quarkoddities-301051:3575623")
    implementation fg.deobf("curse.maven:supplementaries-412082:4521850")
    implementation fg.deobf("curse.maven:supplementariessquared-838411:4484169")
    implementation fg.deobf("curse.maven:oreganized-769203:4377982")
    implementation fg.deobf("curse.maven:windswept-636321:4464804")
    implementation fg.deobf("curse.maven:infernalexpansion-395078:4002091")
    implementation fg.deobf("curse.maven:bettercombat-639842:4522417")
    implementation fg.deobf("curse.maven:spelunkery-790530:4500958")
    implementation fg.deobf("curse.maven:sullysmod-386534:4362857")
    implementation fg.deobf("curse.maven:moreminecarts-440845:4471589")
    implementation fg.deobf("curse.maven:thirst-was-taken-679270:4514550")

    implementation fg.deobf("curse.maven:sleeptight-817564:4521654")
    implementation fg.deobf("curse.maven:heartstone-573152:4389913")
    implementation fg.deobf("curse.maven:moyai-577252:4354803")
    implementation fg.deobf("curse.maven:bagelspalette-628678:4041544")

    implementation fg.deobf("curse.maven:farmersdelight-398521:4525646")
    implementation fg.deobf("curse.maven:brewinandchewin-637808:4468049")
    implementation fg.deobf("curse.maven:culturaldelights-574622:4511737")
    implementation fg.deobf("curse.maven:nethersdelight-496394:3971576")
    implementation fg.deobf("curse.maven:farmersrespite-551453:4081312")

    implementation fg.deobf("curse.maven:upgradeaquatic-326895:4415517")
    implementation fg.deobf("curse.maven:savageandravage-381736:4429231")
    implementation fg.deobf("curse.maven:environmental-388992:4415514")
    implementation fg.deobf("curse.maven:atmospheric-362393:4415516")
    implementation fg.deobf("curse.maven:autumnity-365045:4415512")
    implementation fg.deobf("curse.maven:clayworks-592162:4396960")
    implementation fg.deobf("curse.maven:woodworks-543610:4396958")
    implementation fg.deobf("curse.maven:boatload-337396:4426144")
    implementation fg.deobf("curse.maven:allurement-438003:4415496")
    implementation fg.deobf("curse.maven:neapolitan-382016:4023083")
    implementation fg.deobf("curse.maven:berry_good-355589:4023072")
    implementation fg.deobf("curse.maven:personality-415974:3912029")
    implementation fg.deobf("curse.maven:buzzier_bees-355458:3912010")
    implementation fg.deobf("curse.maven:pet_cemetery-565160:4469393")
    implementation fg.deobf("curse.maven:incubation-361718:3906687")
    implementation fg.deobf("curse.maven:abnormals_delight-442719:4415502")
    //Add Endergetic when Possible

    //Runtime Only
    runtimeOnly fg.deobf("curse.maven:appleskin-248787:3872808")
    runtimeOnly fg.deobf("curse.maven:shutupexperimentalsettings-407174:3759881")

    // Examples using mod jars from ./libs
    // implementation fg.deobf("blank:coolmod-${mc_version}:${coolmod_version}")

    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "fundamentallyfixed",
                "Specification-Vendor"    : "ncpbails",
                "Specification-Version"   : "0.1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "ncpbails",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish plugin
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
// publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
